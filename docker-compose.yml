version: '3'
services:
  postgres:
    image: postgres:14
    container_name: iot_postgres_db
    environment:
      POSTGRES_USER: iot_user
      POSTGRES_PASSWORD: iot_password
      POSTGRES_DB: iot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - iot_network
    restart: always

  web:
    build: .
    container_name: iot_web_app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - iot_network

  rabbitmq-service:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: "rabbitmq-host"
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - iot_network

  tcp_server:
      build:
        context: .
        dockerfile: Dockerfile.tcp_server
      container_name: iot_tcp_server
      depends_on:
        - rabbitmq-service
      networks:
        - iot_network
      expose:
        - "12345"
      ports:
        - "12345:12345"

  consumer:
    build: .
    command: python app/consumer.py
    depends_on:
      - rabbitmq-service
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - iot_network


volumes:
  postgres_data:

networks:
  iot_network:
    driver: bridge